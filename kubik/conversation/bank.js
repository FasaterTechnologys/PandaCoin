module.exports = {
  tag: ["–±–∞–Ω–∫"],
  button: ["bank"],
  func: async(context, { vk, _user, gamekubik, util }) => {
    let _realgame = await gamekubik.realGame(context.peerId)
    if(_realgame.newgamew == true){
      return context.send({message: "–ò–≥—Ä–∞ –Ω–∞—á–Ω—ë—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å—Ç–∞–≤–∫–∏", keyboard: gamekubik.getKeyboard() })
    }

    let _thisGame = await gamekubik.getGame(context.peerId);
    
    if(!_thisGame.users) {
      return context.send({ message: `
[id${context.senderId}|${_user.name}], –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ
–ë–∞–Ω–∫: 0 PC

–°—Ç–∞–≤–∫–∏:
üò≤–ù–µ –∫—Ç–æ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª!üò≤

‚åõ–î–æ –∫–æ–Ω—Ü–∞ —Ä–∞—É–Ω–¥–∞: ${util.unixStampLeft(_thisGame.game.time - Math.floor(Date.now() / 1000))}‚åõ
      `, keyboard: gamekubik.getKeyboard() });
    }

    let coins = 0;
    let str = { even: [], noteven: [], q: [], w: [], e: [], r: [], t: [], y: [], };
    _thisGame.users.forEach((res, i) => {
      res.inGame.forEach((g, k) => {
        if(g.peer_id == Number(context.peerId)) {
            str[g.type].push(`${res.name} - ${util.number_format(g.coins)} PC`);
          coins = Number(coins) + Number(g.coins);
        }
      })
    });
	


    await context.send({ message: `
üè¶ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –±–∞–Ω–∫–∞ ${util.number_format(coins)} PC!


${ ( str.even.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ —á—ë—Ç–Ω–æ–µ:<br>${str.even.join('<br>')}` : `` ) }

${ ( str.noteven.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ –Ω–µ—á—ë—Ç–Ω–æ–µ:<br>${str.noteven.join('<br>')}` : `` ) }

${ ( str.q.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ 1:<br>${str.q.join('<br>')}` : `` ) }

${ ( str.w.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ 2:<br>${str.w.join('<br>')}` : `` ) }

${ ( str.e.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ 3:<br>${str.e.join('<br>')}` : `` ) }

${ ( str.r.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ 4:<br>${str.r.join('<br>')}` : `` ) }

${ ( str.t.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ 5:<br>${str.t.join('<br>')}` : `` ) }

${ ( str.y.length != 0 ? `‚Ä¢ –°—Ç–∞–≤–∫–∏ –Ω–∞ 6:<br>${str.y.join('<br>')}` : `` ) }





üïß  –î–æ –∫–æ–Ω—Ü–∞ —Ä–∞—É–Ω–¥–∞: ${util.unixStampLeft(_thisGame.game.time - Math.floor(Date.now() / 1000))}
üèê  –•–µ—à —Ä–∞—É–Ω–¥–∞: ${_thisGame.game.hash.hash}
    `, keyboard: gamekubik.getKeyboard() });
  }
};
