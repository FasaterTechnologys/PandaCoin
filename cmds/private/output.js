module.exports = {
    tag: ["–≤—ã–≤–æ–¥"],
    button: ["output"],
    func: async(context, { vk, _user, game, db, qiwi, util }) => {
      let { authInfo: { personId: phone } } = await qiwi.getAccountInfo()
      const qiwiBalance = (await qiwi.getBalance()).accounts[0].balance.amount
      const qiw = await context.question(`–≤–≤–µ–¥–∏ —Å–≤–æ–π –∫–∏–≤–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 7953*******`); // sum.text
      
      let amaont =Number(_user.balance)
      if(amaont % 1 != 0) return context.send('–°—É–º–º–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
      if(amaont / 1000 < 1) {
        return context.send(`‚ùó–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ 1‚ÇΩ`)
      }
      if (qiwiBalance < (amaont / 1000 )) {
        return context.send(`üòï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ RUB –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã —Ç–∞–∫–æ–π —Å—É–º–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∞.`)
      }
      const options = {
        amount: Number(_user.balance) / 1000,
        comment: "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É –≤ PandaCoin!",
        account: `+${qiw}`,
      }
      try {
        await qiwi.toWallet(options)
        db.get().collection('users').updateOne({ uid: context.senderId}, { $set: { balance: 0 } });
        await vk.get()._vk.api.messages.send({
          user_id: context.senderId,
          message: `          
    ‚úÖ –í—ã –≤—ã–≤–µ–ª–∏ ${util.number_format(amaont)} PC 
    üí∞ –ù–∞ –≤–∞—à —Å—á—ë—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ ${util.number_format(Number(_user.balance) / 1000)}‚ÇΩ 
    
    üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –ª—é–¥–∏ –ø–æ–≤–µ—Ä–∏–ª–∏ –≤ –Ω–∞—à—É —á–µ—Å—Ç–Ω–æ—Å—Ç—å`,
    }).catch((err) => { return console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è!`) })
    let [us] = await vk.get()._vk.api.users.get({user_id: Number(context.senderId)})
    await vk.get()._vk.api.messages.send({
    user_id: 398851926,
    message: `üí∏ *id${us.id} (${us.first_name}) —É—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–ª ${util.number_format(amaont / 1000)} —Ä—É–±–ª–µ–π 
    ‚úÖ –ï–º—É —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${util.number_format(amaont / 1000 )}‚ÇΩ`,
    }).catch((err) => { return console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è!`) })
        } catch (e) {
        await vk.get()._vk.api.messages.send({
          user_id: context.senderId,
          message: `‚ùó–í–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!
    –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã!
          –û—à–∏–±–∫–∞: ${e}`,
        }).catch((err) => { return console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è!`) })
      }
    
       }
  };
  